[tool.pyright]

include = [
    "gymnasium/**",
    "tests/**"
]

exclude = [
    "**/node_modules",
    "**/__pycache__",
]

strict = [

]

typeCheckingMode = "basic"
pythonVersion = "3.7"
pythonPlatform = "All"
typeshedPath = "typeshed"
enableTypeIgnoreComments = true

# This is required as the CI pre-commit does not download the module (i.e. numpy, pygame, box2d)
#   Therefore, we have to ignore missing imports
reportMissingImports = "none"
# Some modules are missing type stubs, which is an issue when running pyright locally
reportMissingTypeStubs = false
# For warning and error, will raise an error when
reportInvalidTypeVarUse = "none"

# reportUnknownMemberType = "warning"  # -> raises 6035 warnings
# reportUnknownParameterType = "warning"  # -> raises 1327 warnings
# reportUnknownVariableType = "warning"  # -> raises 2585 warnings
# reportUnknownArgumentType = "warning"  # -> raises 2104 warnings
reportGeneralTypeIssues = "none"  # -> commented out raises 489 errors
reportUntypedFunctionDecorator = "none"  # -> pytest.mark.parameterize issues

reportPrivateUsage = "warning"
reportUnboundVariable = "warning"

[tool.pytest.ini_options]
# filterwarnings = ['ignore:.*step API.*:DeprecationWarning']

[tool.poetry]
name = "gymnasium"
version = "0.26.3"
description = "A standard API for reinforcement learning and a diverse set of reference environments (formerly Gym)"
authors = ["Farama Foundation <contact@farama.org>"]
license = "MIT"
readme = "README.md"
classifiers=[
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]

[tool.poetry.dependencies]
python = ">=3.7.1"
numpy = ">=1.18.0"
cloudpickle = ">=1.2.0"
importlib-metadata = ">=4.8.0"
gymnasium-notices = ">=0.0.1"
ale-py = {version = ">=0.8.0,<0.9.0", optional = true}
AutoROM = {version = ">=0.4.2,<0.5.0", extras = ["accept-rom-license"], optional = true}
box2d-py = {version = "2.3.5", optional = true}
pygame = {version = "2.1.0", optional = true}
swig = {version = ">=4.0.0,<5.0.0", optional = true}
mujoco-py = {version = ">=2.1,<2.2", optional = true}
mujoco = {version = "2.2", optional = true}
imageio = {version = ">=2.14.1", optional = true}
lz4 = {version = ">=3.1.0", optional = true}
opencv-python = {version = ">=3.0", optional = true}
matplotlib = {version = ">=3.0", optional = true}
moviepy = {version = ">=1.0.0", optional = true}

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.extras]
atari = ["ale-py"]
accept-rom-license = ["AutoROM"]
classic_control = ["pygame"]
mujoco_py = ["mujoco_py"]
mujoco = ["mujoco"]
toy_text = ["pygame"]
other = ["lz4", "opencv-python", "matplotlib", "moviepy"]
all = ["ale-py", "AutoROM", "pygame", "mujoco-py", "mujoco", "lz4", "opencv-python", "matplotlib", "moviepy"]
